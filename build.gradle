/*
 * Copyright (c) 2017 Cadenza United Kingdom Limited
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.junit.platform:junit-platform-gradle-plugin:1.0.1"
    }
}

allprojects {
    group 'com.cadenzauk'

    apply plugin: 'java'
}

subprojects {
    project.ext {
        springVersion = '4.3.6.RELEASE'
        junitPlatformVersion = '1.0.1'
        junitJupiterVersion = '5.0.1'
    }

    apply plugin: 'maven'
    apply plugin: 'signing'
    apply plugin: 'org.junit.platform.gradle.plugin'

    junitPlatform {
        platformVersion junitPlatformVersion
        filters {
            engines {
                include 'junit-jupiter', 'junit-vintage'
            }
        }
    }

    repositories {
        mavenCentral()
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from tasks.javadoc.destinationDir
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    dependencies {
        testRuntime group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
        testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitJupiterVersion
        testRuntime group: 'org.junit.vintage', name: 'junit-vintage-engine', version: '4.12.1'
    }
}
